{"content": "*&---------------------------------------------------------------------*\n*& Report  ZIS_EXAMPLE\n*&---------------------------------------------------------------------*\nreport zis_example.\n\ninclude zis_example_top.\ninclude zis_example_f01.\n\nstart-of-selection.\n\ninclude = 'X'.\nperform perform_write.\n", "language": "ABAP", "hexsha": "f702dd98900e80f27b0ff4729f38a8f72faf6284", "size": 300, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "zis_example.prog.abap", "max_stars_repo_name": "sbcgua/abap_include_assembler", "max_stars_repo_head_hexsha": "5660773df238668bf654ec322dc46fe8c0757dbb", "max_stars_count": "3.0", "max_stars_repo_stars_event_min_datetime": "2016-03-20T09:52:55.000Z", "max_stars_repo_stars_event_max_datetime": "2020-05-18T23:30:45.000Z", "max_issues_repo_path": "zis_example.prog.abap", "max_issues_repo_head_hexsha": "5660773df238668bf654ec322dc46fe8c0757dbb", "max_issues_count": 6, "max_issues_repo_issues_event_min_datetime": "2016-03-20T10:14:01.000Z", "max_issues_repo_issues_event_max_datetime": "2020-08-27T16:48:13.000Z", "max_forks_repo_path": "zis_example.prog.abap", "max_forks_repo_name": "sbcgua/abap_include_assembler", "max_forks_repo_head_hexsha": "5660773df238668bf654ec322dc46fe8c0757dbb", "max_forks_count": 1, "max_forks_repo_forks_event_min_datetime": "2020-08-27T14:14:59.000Z", "max_forks_repo_forks_event_max_datetime": "2020-08-27T14:14:59.000Z", "avg_line_length": 23.0769230769, "max_line_length": 72, "alphanum_fraction": 0.4066666667}
{"content": "FUNCTION\u00a0zcafm_customer_delete.\n*\"----------------------------------------------------------------------\n*\"*\"Local\u00a0Interface:\n*\"\u00a0\u00a0IMPORTING\n*\"\u00a0\u00a0\u00a0\u00a0\u00a0VALUE(PI_CUSTOMER)\u00a0TYPE\u00a0\u00a0KNA1-KUNNR\n*\"\u00a0\u00a0\u00a0\u00a0\u00a0VALUE(PI_TEST)\u00a0TYPE\u00a0\u00a0CHAR1\n*\"\u00a0\u00a0EXPORTING\n*\"\u00a0\u00a0\u00a0\u00a0\u00a0VALUE(SE_RETURN)\u00a0TYPE\u00a0\u00a0BAPIRET2\n*\"----------------------------------------------------------------------\n\n*----------------------------------------------------------------------*\n*\u00a0\u00a0Function\u00a0Module\u00a0ZCAFM_CUSTOMER_DELETE\u00a0*\n*\u00a0*----------------------------------------------------------------------*\n*\u00a0*\u00a0*\n*\u00a0*\u00a0ID-Reference:\u00a0MuleSoft\u00a0templates\u00a0*\n*\u00a0*\u00a0*\n*\u00a0*\u00a0This\u00a0BAPI\u00a0aims\u00a0to\u00a0set\u00a0deletion\u00a0flag\u00a0for\u00a0particular\u00a0customer.\u00a0If\u00a0par.\u00a0*\n*\u00a0*\u00a0PI_TEST\u00a0is\u00a0provided\u00a0no\u00a0change\u00a0is\u00a0performed.\u00a0*\n*\u00a0*----------------------------------------------------------------------*\n*\u00a0*\u00a0Change\u00a0Log:\u00a0*\n*\u00a0*\u00a0*\n*\u00a0*\u00a0Who\u00a0Date\u00a0Text\u00a0*\n*\u00a0*\u00a0MMARUSKIN\u00a003.07.2014\u00a0Init\u00a0creation.\u00a0*\n*\u00a0*----------------------------------------------------------------------*\n\n*\u00a0Global\u00a0data\u00a0declarations\n\n\n\u00a0\u00a0CONSTANTS:\u00a0lc_obj_task\u00a0TYPE\u00a0cmd_ei_object_task\u00a0VALUE\u00a0'M',\u00a0\"M=Create/Change\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0lc_msg_cls\u00a0\u00a0TYPE\u00a0sy-msgid\u00a0VALUE\u00a0'ZMULESOFTINTEGRATION'.\n\u00a0\u00a0DATA:\u00a0ls_customer\u00a0\u00a0TYPE\u00a0cmds_ei_extern,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0lt_customers\u00a0TYPE\u00a0cmds_ei_main,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ls_mes_error\u00a0TYPE\u00a0cvis_message,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0lv_par\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TYPE\u00a0sy-msgv1.\n\n\n\n*-\u00a0Prepare\u00a0data\n\n\n\u00a0\u00a0ls_customer-header-object_instance-kunnr\u00a0=\u00a0pi_customer.\n\u00a0\u00a0ls_customer-header-object_task\u00a0=\u00a0lc_obj_task.\n\u00a0\u00a0ls_customer-central_data-central-data-loevm\u00a0=\u00a0'X'.\n\u00a0\u00a0ls_customer-central_data-central-datax-loevm\u00a0=\u00a0'X'.\n\u00a0\u00a0APPEND\u00a0ls_customer\u00a0TO\u00a0lt_customers-customers.\n\u00a0\u00a0lv_par\u00a0=\u00a0pi_customer.\n\n\n*-\u00a0Run\u00a0change\u00a0of\u00a0material\u00a0via\u00a0standard\u00a0functionality\n\n\n\u00a0\u00a0CALL\u00a0METHOD\u00a0cmd_ei_api=>maintain_bapi\n\u00a0\u00a0\u00a0\u00a0EXPORTING\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0iv_test_run\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0pi_test\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0iv_collect_messages\u00a0\u00a0=\u00a0'X'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0is_master_data\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0lt_customers\n\u00a0\u00a0\u00a0\u00a0IMPORTING\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0es_message_defective\u00a0=\u00a0ls_mes_error.\n\n\n*-\u00a0Error\u00a0handling\n\n\n\u00a0\u00a0IF\u00a0ls_mes_error-is_error\u00a0IS\u00a0INITIAL\u00a0AND\u00a0pi_test\u00a0IS\u00a0INITIAL.\n\u00a0\u00a0\u00a0\u00a0COMMIT\u00a0WORK\u00a0AND\u00a0WAIT.\n\u00a0\u00a0\u00a0\u00a0CALL\u00a0FUNCTION\u00a0'BALW_BAPIRETURN_GET2'\u00a0\u00a0\u00a0\u00a0\u00a0\"okay:\u00a0flag\u00a0set!\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EXPORTING\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0'I'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cl\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0lc_msg_cls\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number\u00a0\u00a0\u00a0\u00a0=\u00a0100\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0par1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0lv_par\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parameter\u00a0=\u00a0''\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0field\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0''\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IMPORTING\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0\u00a0\u00a0\u00a0=\u00a0se_return.\n\u00a0\u00a0ELSE.\n\u00a0\u00a0\u00a0\u00a0ROLLBACK\u00a0WORK.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"#EC\u00a0CI_ROLLBACK\n\u00a0\u00a0\u00a0\u00a0CALL\u00a0FUNCTION\u00a0'BALW_BAPIRETURN_GET2'\u00a0\u00a0\u00a0\u00a0\u00a0\"problem:\u00a0flag\u00a0NOT\u00a0set!\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EXPORTING\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0'E'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cl\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0lc_msg_cls\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number\u00a0\u00a0\u00a0\u00a0=\u00a0101\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0par1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0lv_par\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parameter\u00a0=\u00a0''\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0field\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0''\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IMPORTING\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0\u00a0\u00a0\u00a0=\u00a0se_return.\n\u00a0\u00a0ENDIF.\n\nENDFUNCTION.", "language": "ABAP", "hexsha": "f7059ca25a13836de140134550b96c66d4d503dc", "size": 2640, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "sap-data-retrieval/src/test/resources/sap/ZCAFM_CUSTOMER_DELETE.abap", "max_stars_repo_name": "mulesoft-consulting/anypoint-examples", "max_stars_repo_head_hexsha": "20f17b2f162c7a81787aafddd54b0ba196edd8d7", "max_stars_count": "1.0", "max_stars_repo_stars_event_min_datetime": "2019-03-08T16:08:23.000Z", "max_stars_repo_stars_event_max_datetime": "2019-03-08T16:08:23.000Z", "max_issues_repo_path": "sap-data-retrieval/src/test/resources/sap/ZCAFM_CUSTOMER_DELETE.abap", "max_issues_repo_head_hexsha": "20f17b2f162c7a81787aafddd54b0ba196edd8d7", "max_issues_count": null, "max_issues_repo_issues_event_min_datetime": "None", "max_issues_repo_issues_event_max_datetime": "None", "max_forks_repo_path": "sap-data-retrieval/src/test/resources/sap/ZCAFM_CUSTOMER_DELETE.abap", "max_forks_repo_name": "mulesoft-consulting/anypoint-examples", "max_forks_repo_head_hexsha": "20f17b2f162c7a81787aafddd54b0ba196edd8d7", "max_forks_count": 1, "max_forks_repo_forks_event_min_datetime": "2019-03-08T16:08:28.000Z", "max_forks_repo_forks_event_max_datetime": "2019-03-08T16:08:28.000Z", "avg_line_length": 29.3333333333, "max_line_length": 76, "alphanum_fraction": 0.5242424242}
{"content": "*&---------------------------------------------------------------------*\n*& Report zdemo_ain_cl25\n*&---------------------------------------------------------------------*\n*& This is the demo program written for book:\n*& ALV grid in nutshell by \u0141ukasz P\u0119giel\n*&---------------------------------------------------------------------*\n*&- 1st character ='C' if we're using custom colour or 'X' for default *\n*&- 2nd character = colour code (from 0 to 7)                          *\n*&                                  0 = background colour              *\n*&                                  1 = blue                           *\n*&                                  2 = gray                           *\n*&                                  3 = yellow                         *\n*&                                  4 = blue/gray                      *\n*&                                  5 = green                          *\n*&                                  6 = red                            *\n*&                                  7 = orange                         *\n*&- 3rd character = intensified (0=off, 1=on)                          *\n*&- 4th character = inverse display (0=off, 1=on)                      *\n*&---------------------------------------------------------------------*\nreport zdemo_ain_cl25.\n\ninclude zdemo_ain_include_screen.\n\nstart-of-selection.\n\n  types: begin of t_data,\n           no_emphasize type spfli-carrid,\n           standard     type spfli-carrid,\n           c100         type spfli-carrid,\n           c101         type spfli-carrid,\n           c110         type spfli-carrid,\n           c111         type spfli-carrid,\n           c200         type spfli-carrid,\n           c201         type spfli-carrid,\n           c210         type spfli-carrid,\n           c211         type spfli-carrid,\n           c300         type spfli-carrid,\n           c301         type spfli-carrid,\n           c310         type spfli-carrid,\n           c311         type spfli-carrid,\n           c400         type spfli-carrid,\n           c401         type spfli-carrid,\n           c410         type spfli-carrid,\n           c411         type spfli-carrid,\n           c500         type spfli-carrid,\n           c501         type spfli-carrid,\n           c510         type spfli-carrid,\n           c511         type spfli-carrid,\n           c600         type spfli-carrid,\n           c601         type spfli-carrid,\n           c610         type spfli-carrid,\n           c611         type spfli-carrid,\n           c700         type spfli-carrid,\n           c701         type spfli-carrid,\n           c710         type spfli-carrid,\n           c711         type spfli-carrid,\n           c000         type spfli-carrid,\n           c001         type spfli-carrid,\n           c010         type spfli-carrid,\n           c011         type spfli-carrid,\n         end of t_data.\n  data flights type standard table of t_data.\n\n  select carrid as no_emphasize\n    up to 50 rows from spfli\n    into corresponding fields of table @flights.\n\n  loop at flights assigning field-symbol(<fl>).\n    <fl>-standard = <fl>-c100 = <fl>-c101 = <fl>-c110 = <fl>-c111 =\n                <fl>-c200 = <fl>-c201 = <fl>-c210 = <fl>-c211 =\n                <fl>-c300 = <fl>-c301 = <fl>-c310 = <fl>-c311 =\n                <fl>-c400 = <fl>-c401 = <fl>-c410 = <fl>-c411 =\n                <fl>-c500 = <fl>-c501 = <fl>-c510 = <fl>-c511 =\n                <fl>-c600 = <fl>-c601 = <fl>-c610 = <fl>-c611 =\n                <fl>-c700 = <fl>-c701 = <fl>-c710 = <fl>-c711 =\n                <fl>-c000 = <fl>-c001 = <fl>-c010 = <fl>-c011 = <fl>-no_emphasize.\n\n  endloop.\n\n  data(grid) = new cl_gui_alv_grid(\n                    i_parent = new cl_gui_custom_container( container_name = 'CC' )\n                                   ).\n  data(fcat) = value lvc_t_fcat(\n                                 ( fieldname = 'NO_EMPHASIZE' reptext = 'NO_EMPHASIZE' )\n                                 ( fieldname = 'STANDARD' emphasize = abap_true reptext = 'STANDARD' )\n                                 ( fieldname = 'C100' emphasize = 'C100' reptext = 'C100')\n                                 ( fieldname = 'C101' emphasize = 'C101' reptext = 'C101')\n                                 ( fieldname = 'C110' emphasize = 'C110' reptext = 'C110')\n                                 ( fieldname = 'C111' emphasize = 'C111' reptext = 'C111')\n                                 ( fieldname = 'C200' emphasize = 'C200' reptext = 'C200')\n                                 ( fieldname = 'C201' emphasize = 'C201' reptext = 'C201')\n                                 ( fieldname = 'C210' emphasize = 'C210' reptext = 'C210')\n                                 ( fieldname = 'C211' emphasize = 'C211' reptext = 'C211')\n                                 ( fieldname = 'C300' emphasize = 'C300' reptext = 'C300')\n                                 ( fieldname = 'C301' emphasize = 'C301' reptext = 'C301')\n                                 ( fieldname = 'C310' emphasize = 'C310' reptext = 'C310')\n                                 ( fieldname = 'C311' emphasize = 'C311' reptext = 'C311')\n                                 ( fieldname = 'C400' emphasize = 'C400' reptext = 'C400')\n                                 ( fieldname = 'C401' emphasize = 'C401' reptext = 'C401')\n                                 ( fieldname = 'C410' emphasize = 'C410' reptext = 'C410')\n                                 ( fieldname = 'C411' emphasize = 'C411' reptext = 'C411')\n                                 ( fieldname = 'C500' emphasize = 'C500' reptext = 'C500')\n                                 ( fieldname = 'C501' emphasize = 'C501' reptext = 'C501')\n                                 ( fieldname = 'C510' emphasize = 'C510' reptext = 'C510')\n                                 ( fieldname = 'C511' emphasize = 'C511' reptext = 'C511')\n                                 ( fieldname = 'C600' emphasize = 'C600' reptext = 'C600')\n                                 ( fieldname = 'C601' emphasize = 'C601' reptext = 'C601')\n                                 ( fieldname = 'C610' emphasize = 'C610' reptext = 'C610')\n                                 ( fieldname = 'C611' emphasize = 'C611' reptext = 'C611')\n                                 ( fieldname = 'C700' emphasize = 'C700' reptext = 'C700')\n                                 ( fieldname = 'C701' emphasize = 'C701' reptext = 'C701')\n                                 ( fieldname = 'C710' emphasize = 'C710' reptext = 'C710')\n                                 ( fieldname = 'C711' emphasize = 'C711' reptext = 'C711')\n                                 ( fieldname = 'C000' emphasize = 'C000' reptext = 'C000')\n                                 ( fieldname = 'C001' emphasize = 'C001' reptext = 'C001')\n                                 ( fieldname = 'C010' emphasize = 'C010' reptext = 'C010')\n                                 ( fieldname = 'C011' emphasize = 'C011' reptext = 'C011')\n                               ).\n  grid->set_table_for_first_display(\n    exporting\n        is_layout = value #( col_opt = abap_true )\n    changing\n      it_fieldcatalog               = fcat\n      it_outtab                     = flights\n    exceptions\n      invalid_parameter_combination = 1\n      program_error                 = 2\n      too_many_lines                = 3\n      others                        = 4\n  ).\n  if sy-subrc eq 0.\n    call screen 0100.\n  endif.\n", "language": "ABAP", "hexsha": "f706c5d249ab3a4ce3d3753967774b9920a31554", "size": 7390, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/fcat/zdemo_ain_cl25.prog.abap", "max_stars_repo_name": "fidley/ALVGridInNutschell", "max_stars_repo_head_hexsha": "d3c95d7f31afbff001fff50edae0c2e09e51fe90", "max_stars_count": "5.0", "max_stars_repo_stars_event_min_datetime": "2019-07-08T11:40:25.000Z", "max_stars_repo_stars_event_max_datetime": "2021-10-02T12:26:06.000Z", "max_issues_repo_path": "src/fcat/zdemo_ain_cl25.prog.abap", "max_issues_repo_head_hexsha": "d3c95d7f31afbff001fff50edae0c2e09e51fe90", "max_issues_count": null, "max_issues_repo_issues_event_min_datetime": "None", "max_issues_repo_issues_event_max_datetime": "None", "max_forks_repo_path": "src/fcat/zdemo_ain_cl25.prog.abap", "max_forks_repo_name": "fidley/ALVGridInNutschell", "max_forks_repo_head_hexsha": "d3c95d7f31afbff001fff50edae0c2e09e51fe90", "max_forks_count": 4, "max_forks_repo_forks_event_min_datetime": "2020-03-21T12:44:33.000Z", "max_forks_repo_forks_event_max_datetime": "2021-09-27T08:43:38.000Z", "avg_line_length": 55.1492537313, "max_line_length": 102, "alphanum_fraction": 0.4073071719}
{"content": "**********************************************************************\n*  FILTER EMPTY VALUES\n**********************************************************************\n\nCLASS lcl_empty_filter DEFINITION FINAL.\n  PUBLIC SECTION.\n    INTERFACES /mbtools/if_ajson_filter.\nENDCLASS.\n\nCLASS lcl_empty_filter IMPLEMENTATION.\n  METHOD /mbtools/if_ajson_filter~keep_node.\n\n    rv_keep = boolc(\n      ( iv_visit = /mbtools/if_ajson_filter=>visit_type-value AND is_node-value IS NOT INITIAL ) OR\n      ( iv_visit <> /mbtools/if_ajson_filter=>visit_type-value AND is_node-children > 0 ) ).\n    \" children = 0 on open for initially empty nodes and on close for filtered ones\n\n  ENDMETHOD.\nENDCLASS.\n\n**********************************************************************\n*  FILTER PREDEFINED PATHS\n**********************************************************************\n\nCLASS lcl_paths_filter DEFINITION FINAL.\n  PUBLIC SECTION.\n    INTERFACES /mbtools/if_ajson_filter.\n    METHODS constructor\n      IMPORTING\n        it_skip_paths TYPE string_table OPTIONAL\n        iv_skip_paths TYPE string OPTIONAL\n      RAISING\n        /mbtools/cx_ajson_error.\n  PRIVATE SECTION.\n    DATA mt_skip_paths TYPE HASHED TABLE OF string WITH UNIQUE KEY table_line.\nENDCLASS.\n\nCLASS lcl_paths_filter IMPLEMENTATION.\n\n  METHOD /mbtools/if_ajson_filter~keep_node.\n\n    DATA lv_path TYPE string.\n\n    lv_path = is_node-path && is_node-name.\n    READ TABLE mt_skip_paths WITH KEY table_line = lv_path TRANSPORTING NO FIELDS.\n    rv_keep = boolc( sy-subrc <> 0 ).\n\n  ENDMETHOD.\n\n  METHOD constructor.\n\n    DATA lv_s TYPE string.\n    DATA lt_tab TYPE string_table.\n    FIELD-SYMBOLS <s> TYPE string.\n\n    IF boolc( iv_skip_paths IS INITIAL ) = boolc( it_skip_paths IS INITIAL ). \" XOR\n      /mbtools/cx_ajson_error=>raise( 'no filter path specified' ).\n    ENDIF.\n\n    LOOP AT it_skip_paths INTO lv_s.\n      lv_s = to_lower( lv_s ).\n      APPEND lv_s TO lt_tab.\n    ENDLOOP.\n\n    IF iv_skip_paths IS NOT INITIAL.\n      SPLIT iv_skip_paths AT ',' INTO TABLE lt_tab.\n      LOOP AT lt_tab ASSIGNING <s>.\n        IF <s> IS INITIAL.\n          DELETE lt_tab INDEX sy-tabix.\n          CONTINUE.\n        ENDIF.\n        <s> = condense( to_lower( <s> ) ).\n      ENDLOOP.\n    ENDIF.\n\n    SORT lt_tab BY table_line.\n    DELETE ADJACENT DUPLICATES FROM lt_tab.\n\n    mt_skip_paths = lt_tab.\n\n  ENDMETHOD.\n\nENDCLASS.\n\n**********************************************************************\n* MULTI FILTER\n**********************************************************************\n\nCLASS lcl_and_filter DEFINITION FINAL.\n  PUBLIC SECTION.\n    INTERFACES /mbtools/if_ajson_filter.\n    METHODS constructor\n      IMPORTING\n        it_filters TYPE /mbtools/if_ajson_filter=>ty_filter_tab\n      RAISING\n        /mbtools/cx_ajson_error.\n  PRIVATE SECTION.\n    DATA mt_filters TYPE /mbtools/if_ajson_filter=>ty_filter_tab.\nENDCLASS.\n\nCLASS lcl_and_filter IMPLEMENTATION.\n\n  METHOD /mbtools/if_ajson_filter~keep_node.\n\n    DATA li_filter LIKE LINE OF mt_filters.\n\n    rv_keep = abap_true.\n    LOOP AT mt_filters INTO li_filter.\n      rv_keep = li_filter->keep_node(\n        is_node  = is_node\n        iv_visit = iv_visit ).\n      IF rv_keep = abap_false.\n        RETURN.\n      ENDIF.\n    ENDLOOP.\n\n  ENDMETHOD.\n\n  METHOD constructor.\n\n    DATA li_filter LIKE LINE OF it_filters.\n\n    LOOP AT it_filters INTO li_filter WHERE table_line IS BOUND.\n      APPEND li_filter TO mt_filters.\n    ENDLOOP.\n\n  ENDMETHOD.\n\nENDCLASS.\n", "language": "ABAP", "hexsha": "f707aa256126ec981696b25d4cbe9173d6a74a1f", "size": 3452, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/#mbtools#cl_ajson_filter_lib.clas.locals_imp.abap", "max_stars_repo_name": "Marc-Bernard-Tools/Mirror-AJSON", "max_stars_repo_head_hexsha": "4bc1b5b661a6e0197770da766293d9434c75e559", "max_stars_count": null, "max_stars_repo_stars_event_min_datetime": "None", "max_stars_repo_stars_event_max_datetime": "None", "max_issues_repo_path": "src/#mbtools#cl_ajson_filter_lib.clas.locals_imp.abap", "max_issues_repo_head_hexsha": "4bc1b5b661a6e0197770da766293d9434c75e559", "max_issues_count": 5, "max_issues_repo_issues_event_min_datetime": "2021-07-12T19:07:01.000Z", "max_issues_repo_issues_event_max_datetime": "2021-09-08T00:29:05.000Z", "max_forks_repo_path": "src/#mbtools#cl_ajson_filter_lib.clas.locals_imp.abap", "max_forks_repo_name": "Marc-Bernard-Tools/Mirror-AJSON", "max_forks_repo_head_hexsha": "4bc1b5b661a6e0197770da766293d9434c75e559", "max_forks_count": 1, "max_forks_repo_forks_event_min_datetime": "2022-03-21T23:27:43.000Z", "max_forks_repo_forks_event_max_datetime": "2022-03-21T23:27:43.000Z", "avg_line_length": 26.5538461538, "max_line_length": 99, "alphanum_fraction": 0.6147161066}
{"content": "FUNCTION-POOL ZEXPIMP_VX_GENER_TEST_CODE.   \"MESSAGE-ID ..\n\n* INCLUDE LZEXPIMP_GENERATE_TEST_CODED...    \" Local class definition\n", "language": "ABAP", "hexsha": "f70ff1b7c91543804aad129c14175a625e0efafb", "size": 130, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/zexpimp_vx_gener_test_code.fugr.lzexpimp_vx_gener_test_codetop.abap", "max_stars_repo_name": "sandraros/export-import-vx", "max_stars_repo_head_hexsha": "a818910f825f6a19105bb1f6ad3563e93a477c38", "max_stars_count": "1.0", "max_stars_repo_stars_event_min_datetime": "2021-07-18T19:47:43.000Z", "max_stars_repo_stars_event_max_datetime": "2021-07-18T19:47:43.000Z", "max_issues_repo_path": "src/zexpimp_vx_gener_test_code.fugr.lzexpimp_vx_gener_test_codetop.abap", "max_issues_repo_head_hexsha": "a818910f825f6a19105bb1f6ad3563e93a477c38", "max_issues_count": null, "max_issues_repo_issues_event_min_datetime": "None", "max_issues_repo_issues_event_max_datetime": "None", "max_forks_repo_path": "src/zexpimp_vx_gener_test_code.fugr.lzexpimp_vx_gener_test_codetop.abap", "max_forks_repo_name": "sandraros/export-import-vx", "max_forks_repo_head_hexsha": "a818910f825f6a19105bb1f6ad3563e93a477c38", "max_forks_count": null, "max_forks_repo_forks_event_min_datetime": "None", "max_forks_repo_forks_event_max_datetime": "None", "avg_line_length": 32.5, "max_line_length": 69, "alphanum_fraction": 0.7846153846}
{"content": "CLASS zcl_abapgit_object_ssst DEFINITION PUBLIC INHERITING FROM zcl_abapgit_objects_super FINAL.\n\n  PUBLIC SECTION.\n    INTERFACES zif_abapgit_object.\n    ALIASES mo_files FOR zif_abapgit_object~mo_files.\n    CONSTANTS: c_style_active TYPE tdactivate VALUE 'A'.\n\n  PRIVATE SECTION.\n    METHODS validate_font\n      IMPORTING iv_tdfamily TYPE tdfamily\n      RAISING   zcx_abapgit_exception.\n\nENDCLASS.\n\n\n\nCLASS ZCL_ABAPGIT_OBJECT_SSST IMPLEMENTATION.\n\n\n  METHOD validate_font.\n\n    DATA: lv_tdfamily TYPE tfo01-tdfamily.\n\n\n    SELECT SINGLE tdfamily FROM tfo01 INTO lv_tdfamily\n      WHERE tdfamily = iv_tdfamily.\n    IF sy-subrc <> 0.\n      zcx_abapgit_exception=>raise( 'Font family not found' ).\n    ENDIF.\n\n  ENDMETHOD.                    \"validate_font\n\n\n  METHOD zif_abapgit_object~changed_by.\n\n    SELECT SINGLE lastuser FROM stxsadm INTO rv_user\n      WHERE stylename = ms_item-obj_name.\n    IF sy-subrc <> 0.\n      rv_user = c_user_unknown.\n    ENDIF.\n\n  ENDMETHOD.\n\n\n  METHOD zif_abapgit_object~compare_to_remote_version.\n    CREATE OBJECT ro_comparison_result TYPE zcl_abapgit_comparison_null.\n  ENDMETHOD.\n\n\n  METHOD zif_abapgit_object~delete.\n\n    DATA: lv_stylename TYPE tdssname.\n\n\n    lv_stylename = ms_item-obj_name.\n\n    CALL FUNCTION 'SSF_DELETE_STYLE'\n      EXPORTING\n        i_stylename           = lv_stylename\n        i_with_dialog         = abap_false\n        i_with_confirm_dialog = abap_false\n      EXCEPTIONS\n        no_name               = 1\n        no_style              = 2\n        style_locked          = 3\n        cancelled             = 4\n        no_access_permission  = 5\n        illegal_language      = 6\n        OTHERS                = 7.\n    IF sy-subrc <> 0 AND sy-subrc <> 2.\n      zcx_abapgit_exception=>raise( 'error from SSF_DELETE_STYLE' ).\n    ENDIF.\n\n  ENDMETHOD.                    \"delete\n\n\n  METHOD zif_abapgit_object~deserialize.\n* see fm SSF_UPLOAD_STYLE\n\n    DATA: ls_header     TYPE ssfcats,\n          ls_new_header TYPE ssfcats,\n          lt_paragraphs TYPE TABLE OF ssfparas,\n          lt_strings    TYPE TABLE OF ssfstrings,\n          lt_tabstops   TYPE TABLE OF stxstab.\n\n    FIELD-SYMBOLS: <lv_spras> TYPE spras.\n\n\n    io_xml->read( EXPORTING iv_name = 'HEADER'\n                  CHANGING cg_data = ls_header ).\n    io_xml->read( EXPORTING iv_name = 'SSFPARAS'\n                  CHANGING cg_data = lt_paragraphs ).\n    io_xml->read( EXPORTING iv_name = 'SSFSTRINGS'\n                  CHANGING cg_data = lt_strings ).\n    io_xml->read( EXPORTING iv_name = 'STXSTAB'\n                  CHANGING cg_data = lt_tabstops ).\n\n    validate_font( ls_header-tdfamily ).\n\n    CALL FUNCTION 'SSF_READ_STYLE' \"Just load FG\n      EXPORTING\n        i_style_name        = ls_header-stylename\n        i_style_active_flag = 'A'\n      EXCEPTIONS\n        OTHERS              = 0.\n\n    SET PARAMETER ID 'EUK' FIELD iv_package.\n    ASSIGN ('(SAPLSTXBS)MASTER_LANGUAGE') TO <lv_spras>.\n    IF sy-subrc = 0.\n      <lv_spras> = ls_header-masterlang.\n    ENDIF.\n\n    CALL FUNCTION 'SSF_SAVE_STYLE'\n      EXPORTING\n        i_header     = ls_header\n      IMPORTING\n        e_header     = ls_new_header\n      TABLES\n        i_paragraphs = lt_paragraphs\n        i_strings    = lt_strings\n        i_tabstops   = lt_tabstops.\n\n    IF ls_new_header IS NOT INITIAL.\n\n      CALL FUNCTION 'SSF_ACTIVATE_STYLE'\n        EXPORTING\n          i_stylename          = ls_header-stylename\n        EXCEPTIONS\n          no_name              = 1\n          no_style             = 2\n          cancelled            = 3\n          no_access_permission = 4\n          illegal_language     = 5\n          OTHERS               = 6.\n      IF sy-subrc <> 0.\n        zcx_abapgit_exception=>raise( 'error from SSF_ACTIVATE_STYLE' ).\n      ENDIF.\n\n    ENDIF.\n\n  ENDMETHOD.                    \"deserialize\n\n\n  METHOD zif_abapgit_object~exists.\n\n    DATA: lv_stylename TYPE stxsadm-stylename.\n\n    SELECT SINGLE stylename\n      FROM stxshead INTO lv_stylename\n      WHERE active    = c_style_active\n        AND stylename = ms_item-obj_name\n        AND vari      = ''.\n    rv_bool = boolc( sy-subrc = 0 ).\n\n  ENDMETHOD.                    \"zif_abapgit_object~exists\n\n\n  METHOD zif_abapgit_object~get_metadata.\n    rs_metadata = get_metadata( ).\n    rs_metadata-delete_tadir = abap_true.\n  ENDMETHOD.                    \"zif_abapgit_object~get_metadata\n\n\n  METHOD zif_abapgit_object~has_changed_since.\n    rv_changed = abap_true.\n  ENDMETHOD.  \"zif_abapgit_object~has_changed_since\n\n\n  METHOD zif_abapgit_object~jump.\n\n    DATA: ls_bcdata TYPE bdcdata,\n          lt_bcdata TYPE STANDARD TABLE OF bdcdata.\n\n    ls_bcdata-program  = 'SAPMSSFS'.\n    ls_bcdata-dynpro   = '0100'.\n    ls_bcdata-dynbegin = 'X'.\n    APPEND ls_bcdata TO lt_bcdata.\n\n    CLEAR ls_bcdata.\n    ls_bcdata-fnam     = 'SSFSCREENS-SNAME'.\n    ls_bcdata-fval     = ms_item-obj_name.\n    APPEND ls_bcdata TO lt_bcdata.\n\n    CLEAR ls_bcdata.\n    ls_bcdata-fnam = 'BDC_OKCODE'.\n    ls_bcdata-fval = '=DISPLAY'.\n    APPEND ls_bcdata TO lt_bcdata.\n\n    CALL FUNCTION 'ABAP4_CALL_TRANSACTION'\n      STARTING NEW TASK 'GIT'\n      EXPORTING\n        tcode     = 'SMARTSTYLES'\n        mode_val  = 'E'\n      TABLES\n        using_tab = lt_bcdata\n      EXCEPTIONS\n        OTHERS    = 1.\n\n    IF sy-subrc <> 0.\n      zcx_abapgit_exception=>raise( 'error from ABAP4_CALL_TRANSACTION, SSST' ).\n    ENDIF.\n\n  ENDMETHOD.                    \"jump\n\n\n  METHOD zif_abapgit_object~serialize.\n* see fm SSF_DOWNLOAD_STYLE\n\n    DATA: lv_style_name TYPE tdssname,\n          ls_header     TYPE ssfcats,\n          lt_paragraphs TYPE TABLE OF ssfparas,\n          lt_strings    TYPE TABLE OF ssfstrings,\n          lt_tabstops   TYPE TABLE OF stxstab.\n\n\n    lv_style_name = ms_item-obj_name.\n\n    CALL FUNCTION 'SSF_READ_STYLE'\n      EXPORTING\n        i_style_name             = lv_style_name\n        i_style_active_flag      = c_style_active\n        i_style_variant          = '%MAIN'\n        i_style_language         = mv_language\n      IMPORTING\n        e_header                 = ls_header\n      TABLES\n        e_paragraphs             = lt_paragraphs\n        e_strings                = lt_strings\n        e_tabstops               = lt_tabstops\n      EXCEPTIONS\n        no_name                  = 1\n        no_style                 = 2\n        active_style_not_found   = 3\n        inactive_style_not_found = 4\n        no_variant               = 5\n        no_main_variant          = 6\n        cancelled                = 7\n        no_access_permission     = 8\n        OTHERS                   = 9.\n    IF sy-subrc = 2.\n      RETURN.\n    ELSEIF sy-subrc <> 0.\n      zcx_abapgit_exception=>raise( 'error from SSF_READ_STYLE' ).\n    ENDIF.\n\n    CLEAR ls_header-version.\n    CLEAR ls_header-firstuser.\n    CLEAR ls_header-firstdate.\n    CLEAR ls_header-firsttime.\n    CLEAR ls_header-lastuser.\n    CLEAR ls_header-lastdate.\n    CLEAR ls_header-lasttime.\n\n    io_xml->add( iv_name = 'HEADER'\n                 ig_data = ls_header ).\n    io_xml->add( ig_data = lt_paragraphs\n                 iv_name = 'SSFPARAS' ).\n    io_xml->add( ig_data = lt_strings\n                 iv_name = 'SSFSTRINGS' ).\n    io_xml->add( ig_data = lt_tabstops\n                 iv_name = 'STXSTAB' ).\n\n  ENDMETHOD.                    \"serialize\n\n  METHOD zif_abapgit_object~is_locked.\n\n    rv_is_locked = exists_a_lock_entry_for( iv_lock_object = 'E_SMSTYLE'\n                                            iv_argument    = |{ ms_item-obj_name }| ).\n\n  ENDMETHOD.\n\nENDCLASS.\n", "language": "ABAP", "hexsha": "f716c8b0d82be34e9fbe78fecb464a6889c1dfc6", "size": 7465, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/objects/zcl_abapgit_object_ssst.clas.abap", "max_stars_repo_name": "sb-sap/abapGit", "max_stars_repo_head_hexsha": "8d1f1c312f5cf70b97fb6f00530be53a5e968a5b", "max_stars_count": null, "max_stars_repo_stars_event_min_datetime": "None", "max_stars_repo_stars_event_max_datetime": "None", "max_issues_repo_path": "src/objects/zcl_abapgit_object_ssst.clas.abap", "max_issues_repo_head_hexsha": "8d1f1c312f5cf70b97fb6f00530be53a5e968a5b", "max_issues_count": null, "max_issues_repo_issues_event_min_datetime": "None", "max_issues_repo_issues_event_max_datetime": "None", "max_forks_repo_path": "src/objects/zcl_abapgit_object_ssst.clas.abap", "max_forks_repo_name": "sb-sap/abapGit", "max_forks_repo_head_hexsha": "8d1f1c312f5cf70b97fb6f00530be53a5e968a5b", "max_forks_count": null, "max_forks_repo_forks_event_min_datetime": "None", "max_forks_repo_forks_event_max_datetime": "None", "avg_line_length": 27.3443223443, "max_line_length": 96, "alphanum_fraction": 0.6092431346}
{"content": "class ZCX_AOF_NOT_FOUND definition\n  public\n  inheriting from ZCX_AOF_ERROR\n  create public .\n\npublic section.\n\n  methods CONSTRUCTOR\n    importing\n      !TEXTID like IF_T100_MESSAGE=>T100KEY optional\n      !PREVIOUS like PREVIOUS optional .\nprotected section.\nprivate section.\nENDCLASS.\n\n\n\nCLASS ZCX_AOF_NOT_FOUND IMPLEMENTATION.\n\n\n  method CONSTRUCTOR.\nCALL METHOD SUPER->CONSTRUCTOR\nEXPORTING\nPREVIOUS = PREVIOUS\n.\nclear me->textid.\nif textid is initial.\n  IF_T100_MESSAGE~T100KEY = IF_T100_MESSAGE=>DEFAULT_TEXTID.\nelse.\n  IF_T100_MESSAGE~T100KEY = TEXTID.\nendif.\n  endmethod.\nENDCLASS.\n", "language": "ABAP", "hexsha": "f71793fca6d480c5256f9bac057cd8998adf9969", "size": 591, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/backend/zcx_aof_not_found.clas.abap", "max_stars_repo_name": "larshp/abapOpenFix", "max_stars_repo_head_hexsha": "fe5ab30b5ee8e1354f26a87a93a4819e0a0a46c5", "max_stars_count": null, "max_stars_repo_stars_event_min_datetime": "None", "max_stars_repo_stars_event_max_datetime": "None", "max_issues_repo_path": "src/backend/zcx_aof_not_found.clas.abap", "max_issues_repo_head_hexsha": "fe5ab30b5ee8e1354f26a87a93a4819e0a0a46c5", "max_issues_count": 5, "max_issues_repo_issues_event_min_datetime": "2017-02-28T14:52:06.000Z", "max_issues_repo_issues_event_max_datetime": "2017-05-30T10:28:37.000Z", "max_forks_repo_path": "src/backend/zcx_aof_not_found.clas.abap", "max_forks_repo_name": "larshp/abapOpenFix", "max_forks_repo_head_hexsha": "fe5ab30b5ee8e1354f26a87a93a4819e0a0a46c5", "max_forks_count": 2, "max_forks_repo_forks_event_min_datetime": "2017-03-08T08:31:57.000Z", "max_forks_repo_forks_event_max_datetime": "2019-02-28T08:43:34.000Z", "avg_line_length": 17.3823529412, "max_line_length": 60, "alphanum_fraction": 0.7817258883}
{"content": "*&---------------------------------------------------------------------*\n*& Report ZMCI_DENEME10\n*&---------------------------------------------------------------------*\n*&\n*&---------------------------------------------------------------------*\nREPORT ZMCI_DENEME10.\n\nselect *\n  FROM lfa1\n  INTO TABLE @DATA(lt_lfa1).\n\"xxxx\n  LOOP AT lt_lfa1 INTO DATA(ls_lfa1).\n    WRITE:/ ls_lfa1-name1, ls_lfa1-name2.\n  ENDLOOP.\n", "language": "ABAP", "hexsha": "f71f25604c7dc0814f2c072f313e45013ea5d59e", "size": 416, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/zmci_deneme10.prog.abap", "max_stars_repo_name": "Mcanipekci/test4", "max_stars_repo_head_hexsha": "16ac6fd93850c5a8f55bab02baf6e7ed05585b4d", "max_stars_count": null, "max_stars_repo_stars_event_min_datetime": "None", "max_stars_repo_stars_event_max_datetime": "None", "max_issues_repo_path": "src/zmci_deneme10.prog.abap", "max_issues_repo_head_hexsha": "16ac6fd93850c5a8f55bab02baf6e7ed05585b4d", "max_issues_count": null, "max_issues_repo_issues_event_min_datetime": "None", "max_issues_repo_issues_event_max_datetime": "None", "max_forks_repo_path": "src/zmci_deneme10.prog.abap", "max_forks_repo_name": "Mcanipekci/test4", "max_forks_repo_head_hexsha": "16ac6fd93850c5a8f55bab02baf6e7ed05585b4d", "max_forks_count": null, "max_forks_repo_forks_event_min_datetime": "None", "max_forks_repo_forks_event_max_datetime": "None", "avg_line_length": 27.7333333333, "max_line_length": 72, "alphanum_fraction": 0.3365384615}
{"content": "CLASS zcl_amp_customizing DEFINITION PUBLIC ABSTRACT.\n  PUBLIC SECTION.\n\n    TYPES ty_metric_collectors TYPE STANDARD TABLE OF zamp_config_prov WITH KEY metric_group.\n\n    METHODS constructor\n      IMPORTING scenario TYPE zamp_config_scen-metric_scenario.\n\n    METHODS get_metric_collectors ABSTRACT\n      RETURNING VALUE(metric_collectors) TYPE ty_metric_collectors.\n\n    METHODS get_metric_converter ABSTRACT\n      RETURNING VALUE(converter_class) TYPE REF TO zif_amp_converter.\n\n  PROTECTED SECTION.\n\n    DATA scenario TYPE zamp_config_scen-metric_scenario.\n    DATA metric_collectors TYPE ty_metric_collectors.\n    DATA metric_converter_class_name TYPE zamp_config_scen-converter_class.\n\n  PRIVATE SECTION.\n\nENDCLASS.\n\nCLASS zcl_amp_customizing IMPLEMENTATION.\n  METHOD constructor.\n\n    me->scenario = scenario.\n\n    SELECT SINGLE converter_class\n    FROM zamp_config_scen\n    INTO @me->metric_converter_class_name\n    WHERE metric_scenario = @me->scenario.\n    IF sy-subrc <> 0.\n      ASSERT 1 = 2.\n    ENDIF.\n\n    SELECT *\n    FROM zamp_config_prov\n    INTO TABLE @metric_collectors\n    WHERE metric_scenario = @me->scenario.\n    IF sy-subrc <> 0.\n      ASSERT 1 = 2.\n    ENDIF.\n\n  ENDMETHOD.\n\n\nENDCLASS.\n", "language": "ABAP", "hexsha": "f71fe84d09efceb7fc43bc72fb7caf850b0028e5", "size": 1212, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "src/zamp_customizing/zcl_amp_customizing.clas.abap", "max_stars_repo_name": "treee111/abap-metrics-provider", "max_stars_repo_head_hexsha": "fda1f2e21a91f5a6c04d31462970a5a9a1c40f2e", "max_stars_count": "12.0", "max_stars_repo_stars_event_min_datetime": "2021-01-22T08:36:08.000Z", "max_stars_repo_stars_event_max_datetime": "2021-11-19T22:43:53.000Z", "max_issues_repo_path": "src/zamp_customizing/zcl_amp_customizing.clas.abap", "max_issues_repo_head_hexsha": "fda1f2e21a91f5a6c04d31462970a5a9a1c40f2e", "max_issues_count": 163, "max_issues_repo_issues_event_min_datetime": "2020-03-12T19:23:27.000Z", "max_issues_repo_issues_event_max_datetime": "2022-03-31T10:09:03.000Z", "max_forks_repo_path": "src/zamp_customizing/zcl_amp_customizing.clas.abap", "max_forks_repo_name": "treee111/abap-metrics-provider", "max_forks_repo_head_hexsha": "fda1f2e21a91f5a6c04d31462970a5a9a1c40f2e", "max_forks_count": 6, "max_forks_repo_forks_event_min_datetime": "2021-01-21T08:07:09.000Z", "max_forks_repo_forks_event_max_datetime": "2021-03-10T08:18:21.000Z", "avg_line_length": 24.24, "max_line_length": 93, "alphanum_fraction": 0.754950495}
{"content": "FUNCTION SELECT_COUNT.\n*\"----------------------------------------------------------------------\n*\"*\"Local Interface:\n*\"  IMPORTING\n*\"     REFERENCE(I_KEY) TYPE  KEY\n*\"  EXPORTING\n*\"     REFERENCE(E_COUNT) TYPE  SY-DBCNT\n*\"----------------------------------------------------------------------\n\n\n  SELECT COUNT(*) FROM some_table INTO e_count\n                           WHERE key = i_key AND\n                                 state >= '000' AND state <= '999'.  \n\n\nENDFUNCTION.", "language": "ABAP", "hexsha": "f720b74363c0db8dedfcc62920e9feb14bc355f1", "size": 475, "ext": "abap", "lang": "ABAP", "max_stars_repo_path": "org.conqat.engine.sourcecode/test-data/org.conqat.engine.sourcecode.dataflow.heuristics/abap/LSELECT_GROUPU02.abap", "max_stars_repo_name": "SvenPeldszus/conqat", "max_stars_repo_head_hexsha": "28fe004a49453894922aeb27ee3467b1748d23e9", "max_stars_count": "1.0", "max_stars_repo_stars_event_min_datetime": "2020-04-28T20:06:30.000Z", "max_stars_repo_stars_event_max_datetime": "2020-04-28T20:06:30.000Z", "max_issues_repo_path": "org.conqat.engine.sourcecode/test-data/org.conqat.engine.sourcecode.shallowparser/abap/LSELECT_GROUPU02.abap", "max_issues_repo_head_hexsha": "28fe004a49453894922aeb27ee3467b1748d23e9", "max_issues_count": null, "max_issues_repo_issues_event_min_datetime": "None", "max_issues_repo_issues_event_max_datetime": "None", "max_forks_repo_path": "org.conqat.engine.sourcecode/test-data/org.conqat.engine.sourcecode.shallowparser/abap/LSELECT_GROUPU02.abap", "max_forks_repo_name": "SvenPeldszus/conqat", "max_forks_repo_head_hexsha": "28fe004a49453894922aeb27ee3467b1748d23e9", "max_forks_count": null, "max_forks_repo_forks_event_min_datetime": "None", "max_forks_repo_forks_event_max_datetime": "None", "avg_line_length": 29.6875, "max_line_length": 72, "alphanum_fraction": 0.3831578947}
